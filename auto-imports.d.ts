/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-auto-import
export {}
declare global {
  const Link: typeof import('react-router-dom')['Link']
  const NavLink: typeof import('react-router-dom')['NavLink']
  const Navigate: typeof import('react-router-dom')['Navigate']
  const Outlet: typeof import('react-router-dom')['Outlet']
  const Route: typeof import('react-router-dom')['Route']
  const Routes: typeof import('react-router-dom')['Routes']
  const createRef: typeof import('react')['createRef']
  const forwardRef: typeof import('react')['forwardRef']
  const lazy: typeof import('react')['lazy']
  const memo: typeof import('react')['memo']
  const startTransition: typeof import('react')['startTransition']
  const useAntdTable: typeof import('ahooks')['useAntdTable']
  const useAsyncEffect: typeof import('ahooks')['useAsyncEffect']
  const useBoolean: typeof import('ahooks')['useBoolean']
  const useCallback: typeof import('react')['useCallback']
  const useClickAway: typeof import('ahooks')['useClickAway']
  const useContext: typeof import('react')['useContext']
  const useControllableValue: typeof import('ahooks')['useControllableValue']
  const useCookieState: typeof import('ahooks')['useCookieState']
  const useCountDown: typeof import('ahooks')['useCountDown']
  const useCounter: typeof import('ahooks')['useCounter']
  const useCreation: typeof import('ahooks')['useCreation']
  const useDebounce: typeof import('ahooks')['useDebounce']
  const useDebounceEffect: typeof import('ahooks')['useDebounceEffect']
  const useDebounceFn: typeof import('ahooks')['useDebounceFn']
  const useDebugValue: typeof import('react')['useDebugValue']
  const useDeepCompareEffect: typeof import('ahooks')['useDeepCompareEffect']
  const useDeepCompareLayoutEffect: typeof import('ahooks')['useDeepCompareLayoutEffect']
  const useDeferredValue: typeof import('react')['useDeferredValue']
  const useDocumentVisibility: typeof import('ahooks')['useDocumentVisibility']
  const useDrag: typeof import('ahooks')['useDrag']
  const useDrop: typeof import('ahooks')['useDrop']
  const useDynamicList: typeof import('ahooks')['useDynamicList']
  const useEffect: typeof import('react')['useEffect']
  const useEventEmitter: typeof import('ahooks')['useEventEmitter']
  const useEventListener: typeof import('ahooks')['useEventListener']
  const useEventTarget: typeof import('ahooks')['useEventTarget']
  const useExternal: typeof import('ahooks')['useExternal']
  const useFavicon: typeof import('ahooks')['useFavicon']
  const useFocusWithin: typeof import('ahooks')['useFocusWithin']
  const useFullscreen: typeof import('ahooks')['useFullscreen']
  const useFusionTable: typeof import('ahooks')['useFusionTable']
  const useGetState: typeof import('ahooks')['useGetState']
  const useHistoryTravel: typeof import('ahooks')['useHistoryTravel']
  const useHover: typeof import('ahooks')['useHover']
  const useHref: typeof import('react-router-dom')['useHref']
  const useId: typeof import('react')['useId']
  const useImperativeHandle: typeof import('react')['useImperativeHandle']
  const useInRouterContext: typeof import('react-router-dom')['useInRouterContext']
  const useInViewport: typeof import('ahooks')['useInViewport']
  const useInfiniteScroll: typeof import('ahooks')['useInfiniteScroll']
  const useInsertionEffect: typeof import('react')['useInsertionEffect']
  const useInterval: typeof import('ahooks')['useInterval']
  const useIsomorphicLayoutEffect: typeof import('ahooks')['useIsomorphicLayoutEffect']
  const useKeyPress: typeof import('ahooks')['useKeyPress']
  const useLatest: typeof import('ahooks')['useLatest']
  const useLayoutEffect: typeof import('react')['useLayoutEffect']
  const useLinkClickHandler: typeof import('react-router-dom')['useLinkClickHandler']
  const useLocalStorageState: typeof import('ahooks')['useLocalStorageState']
  const useLocation: typeof import('react-router-dom')['useLocation']
  const useLockFn: typeof import('ahooks')['useLockFn']
  const useLongPress: typeof import('ahooks')['useLongPress']
  const useMap: typeof import('ahooks')['useMap']
  const useMemo: typeof import('react')['useMemo']
  const useMemoizedFn: typeof import('ahooks')['useMemoizedFn']
  const useMount: typeof import('ahooks')['useMount']
  const useMouse: typeof import('ahooks')['useMouse']
  const useMutationObserver: typeof import('ahooks')['useMutationObserver']
  const useNavigate: typeof import('react-router-dom')['useNavigate']
  const useNavigationType: typeof import('react-router-dom')['useNavigationType']
  const useNetwork: typeof import('ahooks')['useNetwork']
  const useOutlet: typeof import('react-router-dom')['useOutlet']
  const useOutletContext: typeof import('react-router-dom')['useOutletContext']
  const usePagination: typeof import('ahooks')['usePagination']
  const useParams: typeof import('react-router-dom')['useParams']
  const usePrevious: typeof import('ahooks')['usePrevious']
  const useRafInterval: typeof import('ahooks')['useRafInterval']
  const useRafState: typeof import('ahooks')['useRafState']
  const useRafTimeout: typeof import('ahooks')['useRafTimeout']
  const useReactive: typeof import('ahooks')['useReactive']
  const useReducer: typeof import('react')['useReducer']
  const useRef: typeof import('react')['useRef']
  const useRequest: typeof import('ahooks')['useRequest']
  const useResetState: typeof import('ahooks')['useResetState']
  const useResolvedPath: typeof import('react-router-dom')['useResolvedPath']
  const useResponsive: typeof import('ahooks')['useResponsive']
  const useRoutes: typeof import('react-router-dom')['useRoutes']
  const useSafeState: typeof import('ahooks')['useSafeState']
  const useScroll: typeof import('ahooks')['useScroll']
  const useSearchParams: typeof import('react-router-dom')['useSearchParams']
  const useSelections: typeof import('ahooks')['useSelections']
  const useSessionStorageState: typeof import('ahooks')['useSessionStorageState']
  const useSet: typeof import('ahooks')['useSet']
  const useSetState: typeof import('ahooks')['useSetState']
  const useSize: typeof import('ahooks')['useSize']
  const useState: typeof import('react')['useState']
  const useSyncExternalStore: typeof import('react')['useSyncExternalStore']
  const useTextSelection: typeof import('ahooks')['useTextSelection']
  const useThrottle: typeof import('ahooks')['useThrottle']
  const useThrottleEffect: typeof import('ahooks')['useThrottleEffect']
  const useThrottleFn: typeof import('ahooks')['useThrottleFn']
  const useTimeout: typeof import('ahooks')['useTimeout']
  const useTitle: typeof import('ahooks')['useTitle']
  const useToggle: typeof import('ahooks')['useToggle']
  const useTrackedEffect: typeof import('ahooks')['useTrackedEffect']
  const useTransition: typeof import('react')['useTransition']
  const useUnmount: typeof import('ahooks')['useUnmount']
  const useUnmountedRef: typeof import('ahooks')['useUnmountedRef']
  const useUpdate: typeof import('ahooks')['useUpdate']
  const useUpdateEffect: typeof import('ahooks')['useUpdateEffect']
  const useUpdateLayoutEffect: typeof import('ahooks')['useUpdateLayoutEffect']
  const useVirtualList: typeof import('ahooks')['useVirtualList']
  const useWebSocket: typeof import('ahooks')['useWebSocket']
  const useWhyDidYouUpdate: typeof import('ahooks')['useWhyDidYouUpdate']
}
// for vue template auto import
import { UnwrapRef } from 'vue'
declare module 'vue' {
  interface ComponentCustomProperties {
    readonly Link: UnwrapRef<typeof import('react-router-dom')['Link']>
    readonly NavLink: UnwrapRef<typeof import('react-router-dom')['NavLink']>
    readonly Navigate: UnwrapRef<typeof import('react-router-dom')['Navigate']>
    readonly Outlet: UnwrapRef<typeof import('react-router-dom')['Outlet']>
    readonly Route: UnwrapRef<typeof import('react-router-dom')['Route']>
    readonly Routes: UnwrapRef<typeof import('react-router-dom')['Routes']>
    readonly createRef: UnwrapRef<typeof import('react')['createRef']>
    readonly forwardRef: UnwrapRef<typeof import('react')['forwardRef']>
    readonly lazy: UnwrapRef<typeof import('react')['lazy']>
    readonly memo: UnwrapRef<typeof import('react')['memo']>
    readonly startTransition: UnwrapRef<typeof import('react')['startTransition']>
    readonly useAntdTable: UnwrapRef<typeof import('ahooks')['useAntdTable']>
    readonly useAsyncEffect: UnwrapRef<typeof import('ahooks')['useAsyncEffect']>
    readonly useBoolean: UnwrapRef<typeof import('ahooks')['useBoolean']>
    readonly useCallback: UnwrapRef<typeof import('react')['useCallback']>
    readonly useClickAway: UnwrapRef<typeof import('ahooks')['useClickAway']>
    readonly useContext: UnwrapRef<typeof import('react')['useContext']>
    readonly useControllableValue: UnwrapRef<typeof import('ahooks')['useControllableValue']>
    readonly useCookieState: UnwrapRef<typeof import('ahooks')['useCookieState']>
    readonly useCountDown: UnwrapRef<typeof import('ahooks')['useCountDown']>
    readonly useCounter: UnwrapRef<typeof import('ahooks')['useCounter']>
    readonly useCreation: UnwrapRef<typeof import('ahooks')['useCreation']>
    readonly useDebounce: UnwrapRef<typeof import('ahooks')['useDebounce']>
    readonly useDebounceEffect: UnwrapRef<typeof import('ahooks')['useDebounceEffect']>
    readonly useDebounceFn: UnwrapRef<typeof import('ahooks')['useDebounceFn']>
    readonly useDebugValue: UnwrapRef<typeof import('react')['useDebugValue']>
    readonly useDeepCompareEffect: UnwrapRef<typeof import('ahooks')['useDeepCompareEffect']>
    readonly useDeepCompareLayoutEffect: UnwrapRef<typeof import('ahooks')['useDeepCompareLayoutEffect']>
    readonly useDeferredValue: UnwrapRef<typeof import('react')['useDeferredValue']>
    readonly useDocumentVisibility: UnwrapRef<typeof import('ahooks')['useDocumentVisibility']>
    readonly useDrag: UnwrapRef<typeof import('ahooks')['useDrag']>
    readonly useDrop: UnwrapRef<typeof import('ahooks')['useDrop']>
    readonly useDynamicList: UnwrapRef<typeof import('ahooks')['useDynamicList']>
    readonly useEffect: UnwrapRef<typeof import('react')['useEffect']>
    readonly useEventEmitter: UnwrapRef<typeof import('ahooks')['useEventEmitter']>
    readonly useEventListener: UnwrapRef<typeof import('ahooks')['useEventListener']>
    readonly useEventTarget: UnwrapRef<typeof import('ahooks')['useEventTarget']>
    readonly useExternal: UnwrapRef<typeof import('ahooks')['useExternal']>
    readonly useFavicon: UnwrapRef<typeof import('ahooks')['useFavicon']>
    readonly useFocusWithin: UnwrapRef<typeof import('ahooks')['useFocusWithin']>
    readonly useFullscreen: UnwrapRef<typeof import('ahooks')['useFullscreen']>
    readonly useFusionTable: UnwrapRef<typeof import('ahooks')['useFusionTable']>
    readonly useGetState: UnwrapRef<typeof import('ahooks')['useGetState']>
    readonly useHistoryTravel: UnwrapRef<typeof import('ahooks')['useHistoryTravel']>
    readonly useHover: UnwrapRef<typeof import('ahooks')['useHover']>
    readonly useHref: UnwrapRef<typeof import('react-router-dom')['useHref']>
    readonly useId: UnwrapRef<typeof import('react')['useId']>
    readonly useImperativeHandle: UnwrapRef<typeof import('react')['useImperativeHandle']>
    readonly useInRouterContext: UnwrapRef<typeof import('react-router-dom')['useInRouterContext']>
    readonly useInViewport: UnwrapRef<typeof import('ahooks')['useInViewport']>
    readonly useInfiniteScroll: UnwrapRef<typeof import('ahooks')['useInfiniteScroll']>
    readonly useInsertionEffect: UnwrapRef<typeof import('react')['useInsertionEffect']>
    readonly useInterval: UnwrapRef<typeof import('ahooks')['useInterval']>
    readonly useIsomorphicLayoutEffect: UnwrapRef<typeof import('ahooks')['useIsomorphicLayoutEffect']>
    readonly useKeyPress: UnwrapRef<typeof import('ahooks')['useKeyPress']>
    readonly useLatest: UnwrapRef<typeof import('ahooks')['useLatest']>
    readonly useLayoutEffect: UnwrapRef<typeof import('react')['useLayoutEffect']>
    readonly useLinkClickHandler: UnwrapRef<typeof import('react-router-dom')['useLinkClickHandler']>
    readonly useLocalStorageState: UnwrapRef<typeof import('ahooks')['useLocalStorageState']>
    readonly useLocation: UnwrapRef<typeof import('react-router-dom')['useLocation']>
    readonly useLockFn: UnwrapRef<typeof import('ahooks')['useLockFn']>
    readonly useLongPress: UnwrapRef<typeof import('ahooks')['useLongPress']>
    readonly useMap: UnwrapRef<typeof import('ahooks')['useMap']>
    readonly useMemo: UnwrapRef<typeof import('react')['useMemo']>
    readonly useMemoizedFn: UnwrapRef<typeof import('ahooks')['useMemoizedFn']>
    readonly useMount: UnwrapRef<typeof import('ahooks')['useMount']>
    readonly useMouse: UnwrapRef<typeof import('ahooks')['useMouse']>
    readonly useMutationObserver: UnwrapRef<typeof import('ahooks')['useMutationObserver']>
    readonly useNavigate: UnwrapRef<typeof import('react-router-dom')['useNavigate']>
    readonly useNavigationType: UnwrapRef<typeof import('react-router-dom')['useNavigationType']>
    readonly useNetwork: UnwrapRef<typeof import('ahooks')['useNetwork']>
    readonly useOutlet: UnwrapRef<typeof import('react-router-dom')['useOutlet']>
    readonly useOutletContext: UnwrapRef<typeof import('react-router-dom')['useOutletContext']>
    readonly usePagination: UnwrapRef<typeof import('ahooks')['usePagination']>
    readonly useParams: UnwrapRef<typeof import('react-router-dom')['useParams']>
    readonly usePrevious: UnwrapRef<typeof import('ahooks')['usePrevious']>
    readonly useRafInterval: UnwrapRef<typeof import('ahooks')['useRafInterval']>
    readonly useRafState: UnwrapRef<typeof import('ahooks')['useRafState']>
    readonly useRafTimeout: UnwrapRef<typeof import('ahooks')['useRafTimeout']>
    readonly useReactive: UnwrapRef<typeof import('ahooks')['useReactive']>
    readonly useReducer: UnwrapRef<typeof import('react')['useReducer']>
    readonly useRef: UnwrapRef<typeof import('react')['useRef']>
    readonly useRequest: UnwrapRef<typeof import('ahooks')['useRequest']>
    readonly useResetState: UnwrapRef<typeof import('ahooks')['useResetState']>
    readonly useResolvedPath: UnwrapRef<typeof import('react-router-dom')['useResolvedPath']>
    readonly useResponsive: UnwrapRef<typeof import('ahooks')['useResponsive']>
    readonly useRoutes: UnwrapRef<typeof import('react-router-dom')['useRoutes']>
    readonly useSafeState: UnwrapRef<typeof import('ahooks')['useSafeState']>
    readonly useScroll: UnwrapRef<typeof import('ahooks')['useScroll']>
    readonly useSearchParams: UnwrapRef<typeof import('react-router-dom')['useSearchParams']>
    readonly useSelections: UnwrapRef<typeof import('ahooks')['useSelections']>
    readonly useSessionStorageState: UnwrapRef<typeof import('ahooks')['useSessionStorageState']>
    readonly useSet: UnwrapRef<typeof import('ahooks')['useSet']>
    readonly useSetState: UnwrapRef<typeof import('ahooks')['useSetState']>
    readonly useSize: UnwrapRef<typeof import('ahooks')['useSize']>
    readonly useState: UnwrapRef<typeof import('react')['useState']>
    readonly useSyncExternalStore: UnwrapRef<typeof import('react')['useSyncExternalStore']>
    readonly useTextSelection: UnwrapRef<typeof import('ahooks')['useTextSelection']>
    readonly useThrottle: UnwrapRef<typeof import('ahooks')['useThrottle']>
    readonly useThrottleEffect: UnwrapRef<typeof import('ahooks')['useThrottleEffect']>
    readonly useThrottleFn: UnwrapRef<typeof import('ahooks')['useThrottleFn']>
    readonly useTimeout: UnwrapRef<typeof import('ahooks')['useTimeout']>
    readonly useTitle: UnwrapRef<typeof import('ahooks')['useTitle']>
    readonly useToggle: UnwrapRef<typeof import('ahooks')['useToggle']>
    readonly useTrackedEffect: UnwrapRef<typeof import('ahooks')['useTrackedEffect']>
    readonly useTransition: UnwrapRef<typeof import('react')['useTransition']>
    readonly useUnmount: UnwrapRef<typeof import('ahooks')['useUnmount']>
    readonly useUnmountedRef: UnwrapRef<typeof import('ahooks')['useUnmountedRef']>
    readonly useUpdate: UnwrapRef<typeof import('ahooks')['useUpdate']>
    readonly useUpdateEffect: UnwrapRef<typeof import('ahooks')['useUpdateEffect']>
    readonly useUpdateLayoutEffect: UnwrapRef<typeof import('ahooks')['useUpdateLayoutEffect']>
    readonly useVirtualList: UnwrapRef<typeof import('ahooks')['useVirtualList']>
    readonly useWebSocket: UnwrapRef<typeof import('ahooks')['useWebSocket']>
    readonly useWhyDidYouUpdate: UnwrapRef<typeof import('ahooks')['useWhyDidYouUpdate']>
  }
}
